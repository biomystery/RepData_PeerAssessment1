install.packages(c("boot", "data.table", "gplots", "KernSmooth", "MASS", "nlme", "Rcpp", "RSQLite", "VennDiagram"))
install.packages("knitr")
library("knitr")
td = tempdir()
fname = unzip("activity.zip", list=TRUE)$Name[1]
fname
fname = unzip("activity.zip", list=TRUE)$Name
fname
unzip("activity.zip", files=fname, exdir=td, overwrite=TRUE)
fpath = file.path(td, fname)
d = read.csv(fpath, header=TRUE, row.names=NULL,
stringsAsFactors=FALSE)
head(d)
tail(d)
d$steps
hist(d$steps)
plot(d$date,d$steps)
plot(d$date,d$steps,na.omit="T")
d$date[1]
class(d$date[1])
mydates <- as.Date(c("2007-06-22", "2004-02-13"))
class(mydates)
d$date <- as.Date(d$date)
class(d$date[1])
?as.Date
head(d$steps)
head(d)
d[1:20,]
d[1:50,]
d[1:100,]
d[1:200,]
d[1:300,]
d[300:350,]
0.75*0.3/(0.75*.3+.48*.7)
?pnorm
q=seq(0,1,length.out=100)
plot(q,pnorm(q))
q=seq(-1,1,length.out=100)
plot(q,pnorm(q))
q=seq(-2,2,length.out=100)
plot(q,pnorm(q))
plot(q,)
pnorm(70,mean=80,sd=10)
1.645*75+1100
-1.645*75+1100
1.96*75/10
1.96*75
1.645*75/10+1100
choose(4, 5) * 0.5^5 + choose(4, 5) * 0.5^5
choose(4, 5) * 0.5^5 + choose(5, 5) * 0.5^5
pbinom(4, size = 4, prob = 0.5, lower.tail = FALSE)
pbinom(4, size = 5, prob = 0.5, lower.tail = FALSE)
pbinom(4, size = 5, prob = 0.5)
pnorm(1)
pnorm(1,lower.tail=F)
1-pnorm(1,lower.tail=F)*2
1/12/sqrt(1000)
1/12/sqrt(100)
1/12
sqrt(1/12/1000)
sqrt(1/12/100)
sqrt(1/12)
sqrt(1/12)/10
sqrt(1/12)/sqrt(1000)
ppois(10, lambda = 5 * 3)
choose(3,9)
choose(9,3)
9*8*7/6
?hist
?sum
?tapply
n <- 17; fac <- factor(rep(1:3, length = n), levels = 1:5)
table(fac)
tapply(1:n, fac, sum)
date_factor =as.factor(d$date)
step_per_day <- tapply(d$steps,date_factor,sum,na.rm =T)
length(step_per_day)
head(step_per_day)
tail(d$date)
hist(step_per_day)
mean(step_per_day)
median(step_per_day)
cumsum(d$steps)[1:10]
na.rm(cumsum(d$steps)[1:10])
(cumsum(d$steps,na.rm=T)[1:10])
na.rm(cumsum(d$steps)/61
)
cumsum(d$steps)/61
?na.omit
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA))
na.omit(DF)
?na.action
na.action(na.omit(c(1, NA)))
replace(NA,c(1,NA),0)
replace(NA,c(1,NA,1),0)
?replace
?NA
is.na(c(1,NA,1))<-0
is.na(c(1,NA,1)) <- 0
is.na(c(1,NA,1))
data_na_replace <- d$steps
data_na_replace[is.na(data_na_replace)]<-0
head(data_na_replace)
length(step_per_day)
data_na_replace <- d$steps
data_na_replace[is.na(data_na_replace)]<-0
plot(d$interval,cumsum(data_na_replace)/length(step_per_day),
type="l")
plot(d$interval,cumsum(data_na_replace)/length(step_per_day),
type="p")
length(data_na_replace)
length(d$interval)
plot(d$interval,cumsum(data_na_replace)/length(step_per_day),
type="l")
length(cumsum(data_na_replace))
head(d$interval)
head(d$interval)[1:200]
head(d$interval)[1:300]
head(d$interval)[1:600]
head(d$interval)[1:900]
tail(d$interval)
?na.omit
DF
d_clean <- na.omit(d)
plot(d_clean$interval,cumsum(d_clean)/length(step_per_day),
type="l")
plot(d_clean$interval,cumsum(d_clean$steps)/length(step_per_day),
type="l")
length(d_clean)
dim(d_clean)
dim(d)
head(d_clean)
tail(d_clean)
d_clean[1:100]
d_clean[1:100,]
d_clean[200:300,]
step_per_interval<-tapply(d_clean$steps,as.factor(d_clean$interval),mean)
plot(d_clean$interval,step_per_interval,type="l")
plot(as.factor(d_clean$interval),step_per_interval,type="l")
plot(level(as.factor(d_clean$interval)),step_per_interval,type="l")
plot(levels(as.factor(d_clean$interval)),step_per_interval,type="l")
mean(step_per_day)
median(step_per_day)
max.col(step_per_interval)
max.col(t(step_per_interval))
intervals <-levels(as.factor(d_clean$interval))
intervals[max.col(t(step_per_interval))]
step_per_day<-tapply(d_clean$steps,as.factor(d_clean$date),mean)
mean(step_per_day) #[1] 9354.23
median(step_per_day) #[1] 10395
mean(step_per_interval)
date_factor <- as.factor(d$date)
step_per_day <- tapply(d$steps,date_factor,sum,na.rm =T)
mean(step_per_day) #[1] 9354.23
step_per_day<-tapply(d_clean$steps,as.factor(d_clean$date),mean)
hist(step_per_day)
sum(step_per_day)
step_per_day<-tapply(d_clean$steps,as.factor(d_clean$date),sum)
mean(step_per_day) #[1] 9354.23
median(step_per_day) #[1] 10395
step_per_day
step_per_day2 <- tapply(d$steps,date_factor,sum,na.rm =T)
step_per_day2
sum(is.na(d))
tmp=(is.na(d))
head(tmp)
tail(tmp)
head(d)
length(step_per_day)
length(step_per_interval)
head(step_per_interval)
na_idx <- na.omit(d)
sum(na_idx)
na_idx <- is.na(d)
sum(na_idx)
head(na_idx)
na_idx[,'steps']
na_idx[,'steps'][1]
as.character(d_clean2[na_idx[,"steps"][1],"interval"])
d_clean2 <- d
as.character(d_clean2[na_idx[,"steps"][1],"interval"])
na_idx[,"steps"][1]
as.character(d_clean2[na_idx[,"steps"],"interval"])[1]
as.character(d_clean2[na_idx[,"steps"],"interval"])[2]
step_per_interval[as.character(d_clean2[na_idx[,"steps"],"interval"])[1]]
d_clean2[na_idx[,"steps"],"steps"]<-step_per_interval[as.character(d_clean2[na_idx[,"steps"],"interval"])]
d_clean2$steps[1:5]==step_per_interval[1:5]
step_per_day2 <- tapply(d_clean2$steps,date_factor,sum)
plot(d_clean2$date,step_per_day2,type="l")
plot(date_factor,step_per_day2,type="l")
plot(levels(date_factor),step_per_day2,type="l")
head(step_per_day2)
plot(step_per_day2,type="l")
hist(step_per_day2,breaks=20)
hist(step_per_day2,breaks=5)
hist(step_per_day2)
?date
?Date
weekdays(d$date[1:10])
weekdays(date_factor[1:10])
weekdays(as.Date(date_factor[1:10]))
weekdays(as.Date(levels(date_factor))[1:10])
weekend_factor<-as.Date(levels(date_factor))
weekend_factor
weekend_factor<-weekdays(as.Date(levels(date_factor)))
weekend_factor
?subset
?factor
?factorial
class(weekend_factor)
weekend_factor %in% c("Saturday","Sunday")
weekend_idx<-weekend_factor %in% c("Saturday","Sunday")
weekend_factor[weekend_idx]<-"weekend"
weekend_factor[!weekend_idx]<-"weekday"
weekend_factor<-as.factor(weekend_factor)
weekend_factor
library("lattice")
step_per_interval
head(d_clean2)
d_clean2$date %in% "2012-10-01"
sum(d_clean2$date %in% "2012-10-01")
length(d_clean2$date %in% "2012-10-01")
weekend_factor
weekend_factor[1]
head(d_clean2)
step_per_interval
rep(weekend_factor,3)
?rep
sapply(1:3,FUN=function(x) rep(weekend_factor[x],3))
?tapply
ind <- list(c(1, 2, 2), c("A", "A", "B"))
table(ind)
tapply(1:3, ind) #-> the split vector
ind
ind(1)
ind[1]
sapply(1:3,FUN=function(x) rep(weekend_factor[x],3))[:]
sapply(1:3,FUN=function(x) rep(weekend_factor[x],3))
tmp = sapply(1:3,FUN=function(x) rep(weekend_factor[x],3))
?reshape
tmp
tmp[1:9]
length(d_clean2)
length(t(d_clean2))
d_clean2$weekendfactor = sapply(1:length(step_per_day),
FUN=function(x)
{rep(weekend_factor[x],length(step_per_interval))}
)[1:length(t(d_clean2))]
dim(d_clean2)
length(step_per_day)
date_factor <- as.factor(d$date)
step_per_day <- tapply(d$steps,date_factor,sum,na.rm =T)
length(step_per_day)
d_clean2$weekendfactor = sapply(1:length(step_per_day),
FUN=function(x)
{rep(weekend_factor[x],length(step_per_interval))}
)[1:dim(d_clean2)]
d_clean2$weekendfactor = sapply(1:length(step_per_day),
FUN=function(x)
{rep(weekend_factor[x],length(step_per_interval))}
)[1:dim(d_clean2)[2]]
head(d_clean2)
str(d_clean2)
d_clean2$weekendfactor = as.factor(sapply(1:length(step_per_day),
FUN=function(x)
{rep(weekend_factor[x],
length(step_per_interval))}
)[1:dim(d_clean2)[2]])
str(d_clean2)
?xyplot
xyplot(steps ~ intervals,data=d_clean2,groups=weekend_factor)
xyplot(steps ~ intervals,data=d_clean2,groups=weekend_factor)
xyplot(steps ~ intervals,data=d_clean2)#,groups=weekend_factor)
xyplot(steps ~ interval,data=d_clean2)#,groups=weekend_factor)
xyplot(steps ~ interval,data=d_clean2,groups=weekend_factor)
xyplot(steps ~ interval|weekend_factor,data=d_clean2)
head(d_clean2)
library(reshape)
install.packages("reshape")
library(reshape)
head(d_clean2)
d_clean3 <- cast(d_clean2,weekendfactor~interval,mean)
d_clean3 <- cast(melt(d_clean2),weekendfactor~interval,mean)
d_clean3 <- cast(melt(d_clean2,id=c(weekendfactor,interval)),weekendfactor~interval,mean)
names(d_clean2)
d_clean3 <- cast(melt(d_clean2,id=c("weekendfactor","interval")),weekendfactor~interval,mean)
head(d_clean3)
dim(d_clean3)
d_clean2$interval <- as.factor(d_clean2$interval)
d_clean3 <- cast(melt(d_clean2,id=c("weekendfactor","interval")),weekendfactor~interval,mean)
dim(d_clean3)
str(d_clean3)
tmp= melt(d_clean2,id=c("weekendfactor","interval")
)
head(tmp)
str(tmp)
str(d_clean2)
str(weekend_factor)
length(weekend_factor)
61*length(step_per_interval)
length(step_per_interval
)
d_clean2$weekendfactor = as.factor(sapply(1:61,
FUN=function(x)
{rep(weekend_factor[x],288)}
)[1:17568])
str(d_clean2)
d_clean3 <- cast(melt(d_clean2,id=c("weekendfactor","interval")),weekendfactor~interval,mean)
dim(d_clean3)
head(dim(d_clean3))
head(d_clean3)
d_clean3[:]
d_clean4 <-data.fram(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=as.factor(rep(0:5:2355,2)),
steps=d_clean3)
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=as.factor(rep(0:5:2355,2)),
steps=d_clean3)
weekendf=as.factor(c(rep("weekday",288),rep("weekend",288)))
dim(weekendf)
length(weekendf)
intervalf=as.factor(rep(0:5:2355,2))
intervalf=as.factor(c(0:5:2355,0:5:2355))
intervalf=as.factor(cbind(0:5:2355,0:5:2355))
intervalf=as.factor(rbind(0:5:2355,0:5:2355))
0:5:10
intervalf=as.factor(seq(0,2355,by=5),2)
intervalf=as.factor(rep(seq(0,2355,by=5),2))
length(intervalf)
length(seq(0,2355,by=5))
length(step_per_interval)
step_per_interval[1:10]
tail(step_per_interval)
tmp = seq(0,2355,by=5)
head(tmp)
tail(tmp)
length(tmp)
choos(4,5)
choose(4,5)
choose(5,4)
choose(5,4)+choose(5,5)
(choose(5,4)+choose(5,5))/(2^5)
(choose(5,4)+choose(5,5))/(choose(1,5)+choose(2,5)+choose(3,5)+choose(4,5)+choose(5,5))
(choose(5,4)+choose(5,5))/(choose(5,1)+choose(5,2)+choose(5,3)+choose(5,4)+choose(5,5))
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=as.factor(names(step_per_interval),2),
steps=d_clean3)
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=as.factor(rep(names(step_per_interval),2)),
steps=d_clean3)
rep(names(step_per_interval),2)
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=as.factor(rep(names(step_per_interval),2)),
steps=d_clean3[1:576])
dim(d_clean3)
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=as.factor(rep(names(step_per_interval),2)),
steps=c(d_clean3[1,2:289],d_clean3[2,2:289]))
xyplot(steps ~ intervalf|weekendf,data=d_clean4)
head(d_clean4)
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=as.factor(rep(names(step_per_interval),2)),
steps=cbind(d_clean3[1,2:289],d_clean3[2,2:289]))
cbind(d_clean3[1,2:289],d_clean3[2,2:289])
length(cbind(d_clean3[1,2:289],d_clean3[2,2:289]))
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=as.factor(rep(names(step_per_interval),2)),
steps=as.numeric(cbind(d_clean3[1,2:289],d_clean3[2,2:289])))
head(d_clean4)
xyplot(steps ~ intervalf|weekendf,data=d_clean4)
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=rep(names(step_per_interval),2),
steps=as.numeric(cbind(d_clean3[1,2:289],d_clean3[2,2:289])))
xyplot(steps ~ intervalf|weekendf,data=d_clean4)
d_clean3 <- cast(melt(d_clean2,id=c("weekendfactor","interval")),weekendfactor~interval,mean)
dim(d_clean3)
head(d_clean3)
d_clean3 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=rep(names(step_per_interval),2),
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=rep(names(step_per_interval),2),
steps=as.numeric(cbind(d_clean3[1,2:289],d_clean3[2,2:289])))
head(d_clean4)
d_clean3 <- cast(melt(d_clean2,id=c("weekendfactor","interval")),weekendfactor~interval,mean)
dim(d_clean3)
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=rep(names(step_per_interval),2),
steps=as.numeric(cbind(d_clean3[1,2:289],d_clean3[2,2:289])))
xyplot(steps ~ intervalf|weekendf,data=d_clean4)
xyplot(steps ~ intervalf|weekendf,data=d_clean4,type="l")
d_clean4 <-data.frame(weekendf=as.factor(c(rep("weekday",288),rep("weekend",288))),
intervalf=as.numeric(rep(names(step_per_interval),2)),
steps=as.numeric(cbind(d_clean3[1,2:289],d_clean3[2,2:289])))
head(d_clean4)
xyplot(steps ~ intervalf|weekendf,data=d_clean4,type="l")
head(d_clean2)
